[tool.poetry]
name = "pet-project-backend"
version = "0.1.0"
description = "Backend API for the PET-project to manage the data of User, Pet, and Walker entities."
authors = ["g4bor <gabor.tanacs@yahoo.com>"]
readme = "README.md"
include = ["pet_project_backend/", "config/db/*.ini"]

[tool.poetry.dependencies]
python = "^3.8.1"
flask = "^2.2.2"
flask-restx = "^1.1.0"
marshmallow = "^3.19.0"
mysql = "^0.0.3"
flask-sqlalchemy = "^3.0.2"
flask-jwt-extended = "^4.4.4"
flask-cors = "^3.0.10"
flask-bcrypt = "^1.0.1"
python-dotenv = "^1.0.0"

[tool.poetry.dev-dependencies]
pytest = "^7.2.1"
parameterized = "^0.9.0"
pre-commit = "^3.3.3"
pylint = "^2.15.10"
black = "^22.12.0"
autopep8 = "^2.0.2"
flake8 = "^6.0.0"
mypy = "^1.3.0"

[tool.poetry.scripts]
code_formatter = "config.ci_jobs:code_formatter"
linter = "config.ci_jobs:linter"
unittest = "config.ci_jobs:run_unittest"
local_check = "config.ci_jobs:local_check"
build = "config.ci_jobs:build"
dev-server = "config.ci_jobs:start_dev_server"
prod-server = "config.ci_jobs:start_prod_server"

[tool.black]
line-length = 120
target-version = ['py38']

[tool.autopep8]
max_line_length = 120
in-place = true
recursive = true
aggressive = 3

[tool.flake8]
max-line-length = 120

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
